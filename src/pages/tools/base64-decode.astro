---
import Layout from '../../layouts/Layout.astro';
---

<Layout>
    <main class="content-container">
        <h1 class="font-bold mt-4 text-6">Decode Text from Base64 Format</h1>
        <p class="text-4">
            Looking for a an encoder? <a href="/tools/base64-encode.html">Go to base64-encoder</a>
        </p>

        <label for="text" class="font-bold">
            Base64-encoded text
            <textarea id="text" placeholder="Text to be decoded..." class="rounded font-mono"></textarea>
        </label>

        <label class="font-bold">
            Decoded output
            <span class="text-gray-500 font-normal">
                (byte length: <span id="decoded-length">0</span>)
            </span>
            <textarea id="b64" readonly class="bg-warmgray-100 rounded font-mono"></textarea>
        </label>

        <button class="copy-to-clipboard bg-bluegray-600 text-white">
            <svg
                fill="none"
                stroke="currentColor"
                stroke-width="1.5"
                viewBox="0 0 24 24"
                xmlns="http://www.w3.org/2000/svg"
                aria-hidden="true"
            >
                <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    d="M15.666 3.888A2.25 2.25 0 0013.5 2.25h-3c-1.03 0-1.9.693-2.166 1.638m7.332 0c.055.194.084.4.084.612v0a.75.75 0 01-.75.75H9a.75.75 0 01-.75-.75v0c0-.212.03-.418.084-.612m7.332 0c.646.049 1.288.11 1.927.184 1.1.128 1.907 1.077 1.907 2.185V19.5a2.25 2.25 0 01-2.25 2.25H6.75A2.25 2.25 0 014.5 19.5V6.257c0-1.108.806-2.057 1.907-2.185a48.208 48.208 0 011.927-.184"
                ></path>
            </svg>

            <svg
                fill="none"
                stroke="currentColor"
                stroke-width="1.5"
                viewBox="0 0 24 24"
                xmlns="http://www.w3.org/2000/svg"
                aria-hidden="true"
            >
                <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    d="M11.35 3.836c-.065.21-.1.433-.1.664 0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75 2.25 2.25 0 00-.1-.664m-5.8 0A2.251 2.251 0 0113.5 2.25H15c1.012 0 1.867.668 2.15 1.586m-5.8 0c-.376.023-.75.05-1.124.08C9.095 4.01 8.25 4.973 8.25 6.108V8.25m8.9-4.414c.376.023.75.05 1.124.08 1.131.094 1.976 1.057 1.976 2.192V16.5A2.25 2.25 0 0118 18.75h-2.25m-7.5-10.5H4.875c-.621 0-1.125.504-1.125 1.125v11.25c0 .621.504 1.125 1.125 1.125h9.75c.621 0 1.125-.504 1.125-1.125V18.75m-7.5-10.5h6.375c.621 0 1.125.504 1.125 1.125v9.375m-8.25-3l1.5 1.5 3-3.75"
                ></path>
            </svg>

            Copy to clipboard
        </button>

        <p class="text-bluegray-600">
            The output of this online tool identical with the output from <code>base64 command line tool</code> that is present
            on most unix or linux based systems. Any text input can be encoded by calling <code
                >printf "Hello" | base64</code
            >. For more details see the <a href="https://www.unix.com/man-page/linux/1/base64/" target="_blank"
                >man page of base64</a
            >.
        </p>

        <p class="text-bluegray-600 mb-3">
            Base64 encoding converts binary data into a safe ASCII format for transmission. Three bytes become four
            characters. This enables the exchange of information over text-based protocols.
        </p>

        <p class="text-bluegray-600">
            Base64 decoding produces an output that is on average 25% smaller than the original base64-encoded input.
        </p>
    </main>
</Layout>

<script>
    import { decode } from 'js-base64';

    const textarea = document.querySelector<HTMLTextAreaElement>('#text')!;
    const output = document.querySelector<HTMLTextAreaElement>('#b64')!;
    const decodedLength = document.querySelector<HTMLParagraphElement>('#decoded-length')!;
    const copy = document.querySelector<HTMLButtonElement>('.copy-to-clipboard')!;

    output.addEventListener('click', () => {
        output.focus();
        output.select();
    });

    textarea.addEventListener('input', () => {
        encodeInput();
    });

    copy.addEventListener('click', () => {
        navigator.clipboard.writeText(output.value);
        copy.classList.add('success');
        setTimeout(() => {
            copy.classList.remove('success');
        }, 2500);
    });

    function encodeInput() {
        const decodedValue = decode(textarea.value);

        output.value = decodedValue;
        decodedLength.innerHTML = String(new TextEncoder().encode(decodedValue).length);
    }
</script>

<style>
    main {
        display: flex;
        flex-direction: column;
        gap: 1rem;
    }

    p {
        color: #555;
    }

    textarea {
        font-weight: normal;
        display: block;
        width: 100%;
        height: 20vh;
        padding: 8px;
        /* font-family: ui-monospace, SFMono-Regular, SF Mono, Menlo, Consolas, Liberation Mono, monospace; */
        font-size: 1rem;
    }

    label {
        margin-bottom: 4px;
        display: block;
    }

    #line-length {
        width: 6ch;
        text-align: right;
    }

    button {
        padding: 6px 1.5rem;
        border-radius: 4px;
        border: 0;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    button > svg {
        width: 1.25em;
        display: inline-block;
        margin-right: 8px;
    }

    .copy-to-clipboard > svg + svg {
        display: none;
    }

    .copy-to-clipboard.success > svg {
        display: none;
    }

    .copy-to-clipboard.success > svg + svg {
        display: inline-block;
    }
</style>
